// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cs_msg.proto

#ifndef PROTOBUF_INCLUDED_cs_5fmsg_2eproto
#define PROTOBUF_INCLUDED_cs_5fmsg_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_cs_5fmsg_2eproto 

namespace protobuf_cs_5fmsg_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[12];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_cs_5fmsg_2eproto
namespace com {
namespace moon {
namespace demo {
namespace proto {
namespace cs {
class Demo1Req;
class Demo1ReqDefaultTypeInternal;
extern Demo1ReqDefaultTypeInternal _Demo1Req_default_instance_;
class Demo1Rsp;
class Demo1RspDefaultTypeInternal;
extern Demo1RspDefaultTypeInternal _Demo1Rsp_default_instance_;
class Demo2Req;
class Demo2ReqDefaultTypeInternal;
extern Demo2ReqDefaultTypeInternal _Demo2Req_default_instance_;
class Demo2Rsp;
class Demo2RspDefaultTypeInternal;
extern Demo2RspDefaultTypeInternal _Demo2Rsp_default_instance_;
class Demo3Req;
class Demo3ReqDefaultTypeInternal;
extern Demo3ReqDefaultTypeInternal _Demo3Req_default_instance_;
class Demo3Rsp;
class Demo3RspDefaultTypeInternal;
extern Demo3RspDefaultTypeInternal _Demo3Rsp_default_instance_;
class Demo4Req;
class Demo4ReqDefaultTypeInternal;
extern Demo4ReqDefaultTypeInternal _Demo4Req_default_instance_;
class Demo4Rsp;
class Demo4RspDefaultTypeInternal;
extern Demo4RspDefaultTypeInternal _Demo4Rsp_default_instance_;
class Demo5Req;
class Demo5ReqDefaultTypeInternal;
extern Demo5ReqDefaultTypeInternal _Demo5Req_default_instance_;
class Demo5Rsp;
class Demo5RspDefaultTypeInternal;
extern Demo5RspDefaultTypeInternal _Demo5Rsp_default_instance_;
class Demo6Req;
class Demo6ReqDefaultTypeInternal;
extern Demo6ReqDefaultTypeInternal _Demo6Req_default_instance_;
class Demo6Rsp;
class Demo6RspDefaultTypeInternal;
extern Demo6RspDefaultTypeInternal _Demo6Rsp_default_instance_;
}  // namespace cs
}  // namespace proto
}  // namespace demo
}  // namespace moon
}  // namespace com
namespace google {
namespace protobuf {
template<> ::com::moon::demo::proto::cs::Demo1Req* Arena::CreateMaybeMessage<::com::moon::demo::proto::cs::Demo1Req>(Arena*);
template<> ::com::moon::demo::proto::cs::Demo1Rsp* Arena::CreateMaybeMessage<::com::moon::demo::proto::cs::Demo1Rsp>(Arena*);
template<> ::com::moon::demo::proto::cs::Demo2Req* Arena::CreateMaybeMessage<::com::moon::demo::proto::cs::Demo2Req>(Arena*);
template<> ::com::moon::demo::proto::cs::Demo2Rsp* Arena::CreateMaybeMessage<::com::moon::demo::proto::cs::Demo2Rsp>(Arena*);
template<> ::com::moon::demo::proto::cs::Demo3Req* Arena::CreateMaybeMessage<::com::moon::demo::proto::cs::Demo3Req>(Arena*);
template<> ::com::moon::demo::proto::cs::Demo3Rsp* Arena::CreateMaybeMessage<::com::moon::demo::proto::cs::Demo3Rsp>(Arena*);
template<> ::com::moon::demo::proto::cs::Demo4Req* Arena::CreateMaybeMessage<::com::moon::demo::proto::cs::Demo4Req>(Arena*);
template<> ::com::moon::demo::proto::cs::Demo4Rsp* Arena::CreateMaybeMessage<::com::moon::demo::proto::cs::Demo4Rsp>(Arena*);
template<> ::com::moon::demo::proto::cs::Demo5Req* Arena::CreateMaybeMessage<::com::moon::demo::proto::cs::Demo5Req>(Arena*);
template<> ::com::moon::demo::proto::cs::Demo5Rsp* Arena::CreateMaybeMessage<::com::moon::demo::proto::cs::Demo5Rsp>(Arena*);
template<> ::com::moon::demo::proto::cs::Demo6Req* Arena::CreateMaybeMessage<::com::moon::demo::proto::cs::Demo6Req>(Arena*);
template<> ::com::moon::demo::proto::cs::Demo6Rsp* Arena::CreateMaybeMessage<::com::moon::demo::proto::cs::Demo6Rsp>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace com {
namespace moon {
namespace demo {
namespace proto {
namespace cs {

enum Demo4Flag {
  DEMO_4_FLAG_MIN = 0,
  DEMO_4_FLAG_IO_TO_WORK = 0,
  DEMO_4_FLAG_WORK_TO_WORK = 1,
  DEMO_4_FLAG_WORK_TO_BURDEN = 2,
  DEMO_4_FLAG_BURDEN_TO_BURDEN = 3,
  DEMO_4_FLAG_MAX = 4,
  Demo4Flag_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Demo4Flag_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Demo4Flag_IsValid(int value);
const Demo4Flag Demo4Flag_MIN = DEMO_4_FLAG_MIN;
const Demo4Flag Demo4Flag_MAX = DEMO_4_FLAG_MAX;
const int Demo4Flag_ARRAYSIZE = Demo4Flag_MAX + 1;

const ::google::protobuf::EnumDescriptor* Demo4Flag_descriptor();
inline const ::std::string& Demo4Flag_Name(Demo4Flag value) {
  return ::google::protobuf::internal::NameOfEnum(
    Demo4Flag_descriptor(), value);
}
inline bool Demo4Flag_Parse(
    const ::std::string& name, Demo4Flag* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Demo4Flag>(
    Demo4Flag_descriptor(), name, value);
}
// ===================================================================

class Demo1Req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.moon.demo.proto.cs.Demo1Req) */ {
 public:
  Demo1Req();
  virtual ~Demo1Req();

  Demo1Req(const Demo1Req& from);

  inline Demo1Req& operator=(const Demo1Req& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Demo1Req(Demo1Req&& from) noexcept
    : Demo1Req() {
    *this = ::std::move(from);
  }

  inline Demo1Req& operator=(Demo1Req&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Demo1Req& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Demo1Req* internal_default_instance() {
    return reinterpret_cast<const Demo1Req*>(
               &_Demo1Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Demo1Req* other);
  friend void swap(Demo1Req& a, Demo1Req& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Demo1Req* New() const final {
    return CreateMaybeMessage<Demo1Req>(NULL);
  }

  Demo1Req* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Demo1Req>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Demo1Req& from);
  void MergeFrom(const Demo1Req& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Demo1Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 a = 1;
  void clear_a();
  static const int kAFieldNumber = 1;
  ::google::protobuf::int32 a() const;
  void set_a(::google::protobuf::int32 value);

  // bool udp = 2;
  void clear_udp();
  static const int kUdpFieldNumber = 2;
  bool udp() const;
  void set_udp(bool value);

  // @@protoc_insertion_point(class_scope:com.moon.demo.proto.cs.Demo1Req)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 a_;
  bool udp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_cs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Demo1Rsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.moon.demo.proto.cs.Demo1Rsp) */ {
 public:
  Demo1Rsp();
  virtual ~Demo1Rsp();

  Demo1Rsp(const Demo1Rsp& from);

  inline Demo1Rsp& operator=(const Demo1Rsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Demo1Rsp(Demo1Rsp&& from) noexcept
    : Demo1Rsp() {
    *this = ::std::move(from);
  }

  inline Demo1Rsp& operator=(Demo1Rsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Demo1Rsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Demo1Rsp* internal_default_instance() {
    return reinterpret_cast<const Demo1Rsp*>(
               &_Demo1Rsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Demo1Rsp* other);
  friend void swap(Demo1Rsp& a, Demo1Rsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Demo1Rsp* New() const final {
    return CreateMaybeMessage<Demo1Rsp>(NULL);
  }

  Demo1Rsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Demo1Rsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Demo1Rsp& from);
  void MergeFrom(const Demo1Rsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Demo1Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .com.moon.demo.proto.ErrCtx err_ctx = 1;
  bool has_err_ctx() const;
  void clear_err_ctx();
  static const int kErrCtxFieldNumber = 1;
  private:
  const ::com::moon::demo::proto::ErrCtx& _internal_err_ctx() const;
  public:
  const ::com::moon::demo::proto::ErrCtx& err_ctx() const;
  ::com::moon::demo::proto::ErrCtx* release_err_ctx();
  ::com::moon::demo::proto::ErrCtx* mutable_err_ctx();
  void set_allocated_err_ctx(::com::moon::demo::proto::ErrCtx* err_ctx);

  // @@protoc_insertion_point(class_scope:com.moon.demo.proto.cs.Demo1Rsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::com::moon::demo::proto::ErrCtx* err_ctx_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_cs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Demo2Req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.moon.demo.proto.cs.Demo2Req) */ {
 public:
  Demo2Req();
  virtual ~Demo2Req();

  Demo2Req(const Demo2Req& from);

  inline Demo2Req& operator=(const Demo2Req& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Demo2Req(Demo2Req&& from) noexcept
    : Demo2Req() {
    *this = ::std::move(from);
  }

  inline Demo2Req& operator=(Demo2Req&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Demo2Req& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Demo2Req* internal_default_instance() {
    return reinterpret_cast<const Demo2Req*>(
               &_Demo2Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Demo2Req* other);
  friend void swap(Demo2Req& a, Demo2Req& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Demo2Req* New() const final {
    return CreateMaybeMessage<Demo2Req>(NULL);
  }

  Demo2Req* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Demo2Req>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Demo2Req& from);
  void MergeFrom(const Demo2Req& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Demo2Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 a = 1;
  void clear_a();
  static const int kAFieldNumber = 1;
  ::google::protobuf::int32 a() const;
  void set_a(::google::protobuf::int32 value);

  // bool udp = 2;
  void clear_udp();
  static const int kUdpFieldNumber = 2;
  bool udp() const;
  void set_udp(bool value);

  // @@protoc_insertion_point(class_scope:com.moon.demo.proto.cs.Demo2Req)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 a_;
  bool udp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_cs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Demo2Rsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.moon.demo.proto.cs.Demo2Rsp) */ {
 public:
  Demo2Rsp();
  virtual ~Demo2Rsp();

  Demo2Rsp(const Demo2Rsp& from);

  inline Demo2Rsp& operator=(const Demo2Rsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Demo2Rsp(Demo2Rsp&& from) noexcept
    : Demo2Rsp() {
    *this = ::std::move(from);
  }

  inline Demo2Rsp& operator=(Demo2Rsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Demo2Rsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Demo2Rsp* internal_default_instance() {
    return reinterpret_cast<const Demo2Rsp*>(
               &_Demo2Rsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Demo2Rsp* other);
  friend void swap(Demo2Rsp& a, Demo2Rsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Demo2Rsp* New() const final {
    return CreateMaybeMessage<Demo2Rsp>(NULL);
  }

  Demo2Rsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Demo2Rsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Demo2Rsp& from);
  void MergeFrom(const Demo2Rsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Demo2Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .com.moon.demo.proto.ErrCtx err_ctx = 1;
  bool has_err_ctx() const;
  void clear_err_ctx();
  static const int kErrCtxFieldNumber = 1;
  private:
  const ::com::moon::demo::proto::ErrCtx& _internal_err_ctx() const;
  public:
  const ::com::moon::demo::proto::ErrCtx& err_ctx() const;
  ::com::moon::demo::proto::ErrCtx* release_err_ctx();
  ::com::moon::demo::proto::ErrCtx* mutable_err_ctx();
  void set_allocated_err_ctx(::com::moon::demo::proto::ErrCtx* err_ctx);

  // @@protoc_insertion_point(class_scope:com.moon.demo.proto.cs.Demo2Rsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::com::moon::demo::proto::ErrCtx* err_ctx_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_cs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Demo3Req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.moon.demo.proto.cs.Demo3Req) */ {
 public:
  Demo3Req();
  virtual ~Demo3Req();

  Demo3Req(const Demo3Req& from);

  inline Demo3Req& operator=(const Demo3Req& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Demo3Req(Demo3Req&& from) noexcept
    : Demo3Req() {
    *this = ::std::move(from);
  }

  inline Demo3Req& operator=(Demo3Req&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Demo3Req& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Demo3Req* internal_default_instance() {
    return reinterpret_cast<const Demo3Req*>(
               &_Demo3Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Demo3Req* other);
  friend void swap(Demo3Req& a, Demo3Req& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Demo3Req* New() const final {
    return CreateMaybeMessage<Demo3Req>(NULL);
  }

  Demo3Req* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Demo3Req>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Demo3Req& from);
  void MergeFrom(const Demo3Req& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Demo3Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 a = 1;
  void clear_a();
  static const int kAFieldNumber = 1;
  ::google::protobuf::int32 a() const;
  void set_a(::google::protobuf::int32 value);

  // bool udp = 2;
  void clear_udp();
  static const int kUdpFieldNumber = 2;
  bool udp() const;
  void set_udp(bool value);

  // @@protoc_insertion_point(class_scope:com.moon.demo.proto.cs.Demo3Req)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 a_;
  bool udp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_cs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Demo3Rsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.moon.demo.proto.cs.Demo3Rsp) */ {
 public:
  Demo3Rsp();
  virtual ~Demo3Rsp();

  Demo3Rsp(const Demo3Rsp& from);

  inline Demo3Rsp& operator=(const Demo3Rsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Demo3Rsp(Demo3Rsp&& from) noexcept
    : Demo3Rsp() {
    *this = ::std::move(from);
  }

  inline Demo3Rsp& operator=(Demo3Rsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Demo3Rsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Demo3Rsp* internal_default_instance() {
    return reinterpret_cast<const Demo3Rsp*>(
               &_Demo3Rsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Demo3Rsp* other);
  friend void swap(Demo3Rsp& a, Demo3Rsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Demo3Rsp* New() const final {
    return CreateMaybeMessage<Demo3Rsp>(NULL);
  }

  Demo3Rsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Demo3Rsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Demo3Rsp& from);
  void MergeFrom(const Demo3Rsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Demo3Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .com.moon.demo.proto.ErrCtx err_ctx = 1;
  bool has_err_ctx() const;
  void clear_err_ctx();
  static const int kErrCtxFieldNumber = 1;
  private:
  const ::com::moon::demo::proto::ErrCtx& _internal_err_ctx() const;
  public:
  const ::com::moon::demo::proto::ErrCtx& err_ctx() const;
  ::com::moon::demo::proto::ErrCtx* release_err_ctx();
  ::com::moon::demo::proto::ErrCtx* mutable_err_ctx();
  void set_allocated_err_ctx(::com::moon::demo::proto::ErrCtx* err_ctx);

  // @@protoc_insertion_point(class_scope:com.moon.demo.proto.cs.Demo3Rsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::com::moon::demo::proto::ErrCtx* err_ctx_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_cs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Demo4Req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.moon.demo.proto.cs.Demo4Req) */ {
 public:
  Demo4Req();
  virtual ~Demo4Req();

  Demo4Req(const Demo4Req& from);

  inline Demo4Req& operator=(const Demo4Req& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Demo4Req(Demo4Req&& from) noexcept
    : Demo4Req() {
    *this = ::std::move(from);
  }

  inline Demo4Req& operator=(Demo4Req&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Demo4Req& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Demo4Req* internal_default_instance() {
    return reinterpret_cast<const Demo4Req*>(
               &_Demo4Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Demo4Req* other);
  friend void swap(Demo4Req& a, Demo4Req& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Demo4Req* New() const final {
    return CreateMaybeMessage<Demo4Req>(NULL);
  }

  Demo4Req* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Demo4Req>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Demo4Req& from);
  void MergeFrom(const Demo4Req& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Demo4Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string c = 3;
  void clear_c();
  static const int kCFieldNumber = 3;
  const ::std::string& c() const;
  void set_c(const ::std::string& value);
  #if LANG_CXX11
  void set_c(::std::string&& value);
  #endif
  void set_c(const char* value);
  void set_c(const char* value, size_t size);
  ::std::string* mutable_c();
  ::std::string* release_c();
  void set_allocated_c(::std::string* c);

  // bytes d = 4;
  void clear_d();
  static const int kDFieldNumber = 4;
  const ::std::string& d() const;
  void set_d(const ::std::string& value);
  #if LANG_CXX11
  void set_d(::std::string&& value);
  #endif
  void set_d(const char* value);
  void set_d(const void* value, size_t size);
  ::std::string* mutable_d();
  ::std::string* release_d();
  void set_allocated_d(::std::string* d);

  // int64 b = 2;
  void clear_b();
  static const int kBFieldNumber = 2;
  ::google::protobuf::int64 b() const;
  void set_b(::google::protobuf::int64 value);

  // int32 a = 1;
  void clear_a();
  static const int kAFieldNumber = 1;
  ::google::protobuf::int32 a() const;
  void set_a(::google::protobuf::int32 value);

  // .com.moon.demo.proto.cs.Demo4Flag flag = 5;
  void clear_flag();
  static const int kFlagFieldNumber = 5;
  ::com::moon::demo::proto::cs::Demo4Flag flag() const;
  void set_flag(::com::moon::demo::proto::cs::Demo4Flag value);

  // @@protoc_insertion_point(class_scope:com.moon.demo.proto.cs.Demo4Req)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr c_;
  ::google::protobuf::internal::ArenaStringPtr d_;
  ::google::protobuf::int64 b_;
  ::google::protobuf::int32 a_;
  int flag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_cs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Demo4Rsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.moon.demo.proto.cs.Demo4Rsp) */ {
 public:
  Demo4Rsp();
  virtual ~Demo4Rsp();

  Demo4Rsp(const Demo4Rsp& from);

  inline Demo4Rsp& operator=(const Demo4Rsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Demo4Rsp(Demo4Rsp&& from) noexcept
    : Demo4Rsp() {
    *this = ::std::move(from);
  }

  inline Demo4Rsp& operator=(Demo4Rsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Demo4Rsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Demo4Rsp* internal_default_instance() {
    return reinterpret_cast<const Demo4Rsp*>(
               &_Demo4Rsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(Demo4Rsp* other);
  friend void swap(Demo4Rsp& a, Demo4Rsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Demo4Rsp* New() const final {
    return CreateMaybeMessage<Demo4Rsp>(NULL);
  }

  Demo4Rsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Demo4Rsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Demo4Rsp& from);
  void MergeFrom(const Demo4Rsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Demo4Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .com.moon.demo.proto.ErrCtx err_ctx = 1;
  bool has_err_ctx() const;
  void clear_err_ctx();
  static const int kErrCtxFieldNumber = 1;
  private:
  const ::com::moon::demo::proto::ErrCtx& _internal_err_ctx() const;
  public:
  const ::com::moon::demo::proto::ErrCtx& err_ctx() const;
  ::com::moon::demo::proto::ErrCtx* release_err_ctx();
  ::com::moon::demo::proto::ErrCtx* mutable_err_ctx();
  void set_allocated_err_ctx(::com::moon::demo::proto::ErrCtx* err_ctx);

  // @@protoc_insertion_point(class_scope:com.moon.demo.proto.cs.Demo4Rsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::com::moon::demo::proto::ErrCtx* err_ctx_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_cs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Demo5Req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.moon.demo.proto.cs.Demo5Req) */ {
 public:
  Demo5Req();
  virtual ~Demo5Req();

  Demo5Req(const Demo5Req& from);

  inline Demo5Req& operator=(const Demo5Req& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Demo5Req(Demo5Req&& from) noexcept
    : Demo5Req() {
    *this = ::std::move(from);
  }

  inline Demo5Req& operator=(Demo5Req&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Demo5Req& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Demo5Req* internal_default_instance() {
    return reinterpret_cast<const Demo5Req*>(
               &_Demo5Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(Demo5Req* other);
  friend void swap(Demo5Req& a, Demo5Req& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Demo5Req* New() const final {
    return CreateMaybeMessage<Demo5Req>(NULL);
  }

  Demo5Req* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Demo5Req>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Demo5Req& from);
  void MergeFrom(const Demo5Req& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Demo5Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string c = 3;
  void clear_c();
  static const int kCFieldNumber = 3;
  const ::std::string& c() const;
  void set_c(const ::std::string& value);
  #if LANG_CXX11
  void set_c(::std::string&& value);
  #endif
  void set_c(const char* value);
  void set_c(const char* value, size_t size);
  ::std::string* mutable_c();
  ::std::string* release_c();
  void set_allocated_c(::std::string* c);

  // bytes d = 4;
  void clear_d();
  static const int kDFieldNumber = 4;
  const ::std::string& d() const;
  void set_d(const ::std::string& value);
  #if LANG_CXX11
  void set_d(::std::string&& value);
  #endif
  void set_d(const char* value);
  void set_d(const void* value, size_t size);
  ::std::string* mutable_d();
  ::std::string* release_d();
  void set_allocated_d(::std::string* d);

  // int64 b = 2;
  void clear_b();
  static const int kBFieldNumber = 2;
  ::google::protobuf::int64 b() const;
  void set_b(::google::protobuf::int64 value);

  // int32 a = 1;
  void clear_a();
  static const int kAFieldNumber = 1;
  ::google::protobuf::int32 a() const;
  void set_a(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.moon.demo.proto.cs.Demo5Req)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr c_;
  ::google::protobuf::internal::ArenaStringPtr d_;
  ::google::protobuf::int64 b_;
  ::google::protobuf::int32 a_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_cs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Demo5Rsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.moon.demo.proto.cs.Demo5Rsp) */ {
 public:
  Demo5Rsp();
  virtual ~Demo5Rsp();

  Demo5Rsp(const Demo5Rsp& from);

  inline Demo5Rsp& operator=(const Demo5Rsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Demo5Rsp(Demo5Rsp&& from) noexcept
    : Demo5Rsp() {
    *this = ::std::move(from);
  }

  inline Demo5Rsp& operator=(Demo5Rsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Demo5Rsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Demo5Rsp* internal_default_instance() {
    return reinterpret_cast<const Demo5Rsp*>(
               &_Demo5Rsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(Demo5Rsp* other);
  friend void swap(Demo5Rsp& a, Demo5Rsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Demo5Rsp* New() const final {
    return CreateMaybeMessage<Demo5Rsp>(NULL);
  }

  Demo5Rsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Demo5Rsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Demo5Rsp& from);
  void MergeFrom(const Demo5Rsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Demo5Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .com.moon.demo.proto.ErrCtx err_ctx = 1;
  bool has_err_ctx() const;
  void clear_err_ctx();
  static const int kErrCtxFieldNumber = 1;
  private:
  const ::com::moon::demo::proto::ErrCtx& _internal_err_ctx() const;
  public:
  const ::com::moon::demo::proto::ErrCtx& err_ctx() const;
  ::com::moon::demo::proto::ErrCtx* release_err_ctx();
  ::com::moon::demo::proto::ErrCtx* mutable_err_ctx();
  void set_allocated_err_ctx(::com::moon::demo::proto::ErrCtx* err_ctx);

  // @@protoc_insertion_point(class_scope:com.moon.demo.proto.cs.Demo5Rsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::com::moon::demo::proto::ErrCtx* err_ctx_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_cs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Demo6Req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.moon.demo.proto.cs.Demo6Req) */ {
 public:
  Demo6Req();
  virtual ~Demo6Req();

  Demo6Req(const Demo6Req& from);

  inline Demo6Req& operator=(const Demo6Req& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Demo6Req(Demo6Req&& from) noexcept
    : Demo6Req() {
    *this = ::std::move(from);
  }

  inline Demo6Req& operator=(Demo6Req&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Demo6Req& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Demo6Req* internal_default_instance() {
    return reinterpret_cast<const Demo6Req*>(
               &_Demo6Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(Demo6Req* other);
  friend void swap(Demo6Req& a, Demo6Req& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Demo6Req* New() const final {
    return CreateMaybeMessage<Demo6Req>(NULL);
  }

  Demo6Req* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Demo6Req>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Demo6Req& from);
  void MergeFrom(const Demo6Req& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Demo6Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 a = 1;
  void clear_a();
  static const int kAFieldNumber = 1;
  ::google::protobuf::int32 a() const;
  void set_a(::google::protobuf::int32 value);

  // bool http = 2;
  void clear_http();
  static const int kHttpFieldNumber = 2;
  bool http() const;
  void set_http(bool value);

  // @@protoc_insertion_point(class_scope:com.moon.demo.proto.cs.Demo6Req)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 a_;
  bool http_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_cs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Demo6Rsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.moon.demo.proto.cs.Demo6Rsp) */ {
 public:
  Demo6Rsp();
  virtual ~Demo6Rsp();

  Demo6Rsp(const Demo6Rsp& from);

  inline Demo6Rsp& operator=(const Demo6Rsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Demo6Rsp(Demo6Rsp&& from) noexcept
    : Demo6Rsp() {
    *this = ::std::move(from);
  }

  inline Demo6Rsp& operator=(Demo6Rsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Demo6Rsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Demo6Rsp* internal_default_instance() {
    return reinterpret_cast<const Demo6Rsp*>(
               &_Demo6Rsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(Demo6Rsp* other);
  friend void swap(Demo6Rsp& a, Demo6Rsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Demo6Rsp* New() const final {
    return CreateMaybeMessage<Demo6Rsp>(NULL);
  }

  Demo6Rsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Demo6Rsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Demo6Rsp& from);
  void MergeFrom(const Demo6Rsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Demo6Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .com.moon.demo.proto.ErrCtx err_ctx = 1;
  bool has_err_ctx() const;
  void clear_err_ctx();
  static const int kErrCtxFieldNumber = 1;
  private:
  const ::com::moon::demo::proto::ErrCtx& _internal_err_ctx() const;
  public:
  const ::com::moon::demo::proto::ErrCtx& err_ctx() const;
  ::com::moon::demo::proto::ErrCtx* release_err_ctx();
  ::com::moon::demo::proto::ErrCtx* mutable_err_ctx();
  void set_allocated_err_ctx(::com::moon::demo::proto::ErrCtx* err_ctx);

  // @@protoc_insertion_point(class_scope:com.moon.demo.proto.cs.Demo6Rsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::com::moon::demo::proto::ErrCtx* err_ctx_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_cs_5fmsg_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Demo1Req

// int32 a = 1;
inline void Demo1Req::clear_a() {
  a_ = 0;
}
inline ::google::protobuf::int32 Demo1Req::a() const {
  // @@protoc_insertion_point(field_get:com.moon.demo.proto.cs.Demo1Req.a)
  return a_;
}
inline void Demo1Req::set_a(::google::protobuf::int32 value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:com.moon.demo.proto.cs.Demo1Req.a)
}

// bool udp = 2;
inline void Demo1Req::clear_udp() {
  udp_ = false;
}
inline bool Demo1Req::udp() const {
  // @@protoc_insertion_point(field_get:com.moon.demo.proto.cs.Demo1Req.udp)
  return udp_;
}
inline void Demo1Req::set_udp(bool value) {
  
  udp_ = value;
  // @@protoc_insertion_point(field_set:com.moon.demo.proto.cs.Demo1Req.udp)
}

// -------------------------------------------------------------------

// Demo1Rsp

// .com.moon.demo.proto.ErrCtx err_ctx = 1;
inline bool Demo1Rsp::has_err_ctx() const {
  return this != internal_default_instance() && err_ctx_ != NULL;
}
inline const ::com::moon::demo::proto::ErrCtx& Demo1Rsp::_internal_err_ctx() const {
  return *err_ctx_;
}
inline const ::com::moon::demo::proto::ErrCtx& Demo1Rsp::err_ctx() const {
  const ::com::moon::demo::proto::ErrCtx* p = err_ctx_;
  // @@protoc_insertion_point(field_get:com.moon.demo.proto.cs.Demo1Rsp.err_ctx)
  return p != NULL ? *p : *reinterpret_cast<const ::com::moon::demo::proto::ErrCtx*>(
      &::com::moon::demo::proto::_ErrCtx_default_instance_);
}
inline ::com::moon::demo::proto::ErrCtx* Demo1Rsp::release_err_ctx() {
  // @@protoc_insertion_point(field_release:com.moon.demo.proto.cs.Demo1Rsp.err_ctx)
  
  ::com::moon::demo::proto::ErrCtx* temp = err_ctx_;
  err_ctx_ = NULL;
  return temp;
}
inline ::com::moon::demo::proto::ErrCtx* Demo1Rsp::mutable_err_ctx() {
  
  if (err_ctx_ == NULL) {
    auto* p = CreateMaybeMessage<::com::moon::demo::proto::ErrCtx>(GetArenaNoVirtual());
    err_ctx_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.moon.demo.proto.cs.Demo1Rsp.err_ctx)
  return err_ctx_;
}
inline void Demo1Rsp::set_allocated_err_ctx(::com::moon::demo::proto::ErrCtx* err_ctx) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(err_ctx_);
  }
  if (err_ctx) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      err_ctx = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, err_ctx, submessage_arena);
    }
    
  } else {
    
  }
  err_ctx_ = err_ctx;
  // @@protoc_insertion_point(field_set_allocated:com.moon.demo.proto.cs.Demo1Rsp.err_ctx)
}

// -------------------------------------------------------------------

// Demo2Req

// int32 a = 1;
inline void Demo2Req::clear_a() {
  a_ = 0;
}
inline ::google::protobuf::int32 Demo2Req::a() const {
  // @@protoc_insertion_point(field_get:com.moon.demo.proto.cs.Demo2Req.a)
  return a_;
}
inline void Demo2Req::set_a(::google::protobuf::int32 value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:com.moon.demo.proto.cs.Demo2Req.a)
}

// bool udp = 2;
inline void Demo2Req::clear_udp() {
  udp_ = false;
}
inline bool Demo2Req::udp() const {
  // @@protoc_insertion_point(field_get:com.moon.demo.proto.cs.Demo2Req.udp)
  return udp_;
}
inline void Demo2Req::set_udp(bool value) {
  
  udp_ = value;
  // @@protoc_insertion_point(field_set:com.moon.demo.proto.cs.Demo2Req.udp)
}

// -------------------------------------------------------------------

// Demo2Rsp

// .com.moon.demo.proto.ErrCtx err_ctx = 1;
inline bool Demo2Rsp::has_err_ctx() const {
  return this != internal_default_instance() && err_ctx_ != NULL;
}
inline const ::com::moon::demo::proto::ErrCtx& Demo2Rsp::_internal_err_ctx() const {
  return *err_ctx_;
}
inline const ::com::moon::demo::proto::ErrCtx& Demo2Rsp::err_ctx() const {
  const ::com::moon::demo::proto::ErrCtx* p = err_ctx_;
  // @@protoc_insertion_point(field_get:com.moon.demo.proto.cs.Demo2Rsp.err_ctx)
  return p != NULL ? *p : *reinterpret_cast<const ::com::moon::demo::proto::ErrCtx*>(
      &::com::moon::demo::proto::_ErrCtx_default_instance_);
}
inline ::com::moon::demo::proto::ErrCtx* Demo2Rsp::release_err_ctx() {
  // @@protoc_insertion_point(field_release:com.moon.demo.proto.cs.Demo2Rsp.err_ctx)
  
  ::com::moon::demo::proto::ErrCtx* temp = err_ctx_;
  err_ctx_ = NULL;
  return temp;
}
inline ::com::moon::demo::proto::ErrCtx* Demo2Rsp::mutable_err_ctx() {
  
  if (err_ctx_ == NULL) {
    auto* p = CreateMaybeMessage<::com::moon::demo::proto::ErrCtx>(GetArenaNoVirtual());
    err_ctx_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.moon.demo.proto.cs.Demo2Rsp.err_ctx)
  return err_ctx_;
}
inline void Demo2Rsp::set_allocated_err_ctx(::com::moon::demo::proto::ErrCtx* err_ctx) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(err_ctx_);
  }
  if (err_ctx) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      err_ctx = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, err_ctx, submessage_arena);
    }
    
  } else {
    
  }
  err_ctx_ = err_ctx;
  // @@protoc_insertion_point(field_set_allocated:com.moon.demo.proto.cs.Demo2Rsp.err_ctx)
}

// -------------------------------------------------------------------

// Demo3Req

// int32 a = 1;
inline void Demo3Req::clear_a() {
  a_ = 0;
}
inline ::google::protobuf::int32 Demo3Req::a() const {
  // @@protoc_insertion_point(field_get:com.moon.demo.proto.cs.Demo3Req.a)
  return a_;
}
inline void Demo3Req::set_a(::google::protobuf::int32 value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:com.moon.demo.proto.cs.Demo3Req.a)
}

// bool udp = 2;
inline void Demo3Req::clear_udp() {
  udp_ = false;
}
inline bool Demo3Req::udp() const {
  // @@protoc_insertion_point(field_get:com.moon.demo.proto.cs.Demo3Req.udp)
  return udp_;
}
inline void Demo3Req::set_udp(bool value) {
  
  udp_ = value;
  // @@protoc_insertion_point(field_set:com.moon.demo.proto.cs.Demo3Req.udp)
}

// -------------------------------------------------------------------

// Demo3Rsp

// .com.moon.demo.proto.ErrCtx err_ctx = 1;
inline bool Demo3Rsp::has_err_ctx() const {
  return this != internal_default_instance() && err_ctx_ != NULL;
}
inline const ::com::moon::demo::proto::ErrCtx& Demo3Rsp::_internal_err_ctx() const {
  return *err_ctx_;
}
inline const ::com::moon::demo::proto::ErrCtx& Demo3Rsp::err_ctx() const {
  const ::com::moon::demo::proto::ErrCtx* p = err_ctx_;
  // @@protoc_insertion_point(field_get:com.moon.demo.proto.cs.Demo3Rsp.err_ctx)
  return p != NULL ? *p : *reinterpret_cast<const ::com::moon::demo::proto::ErrCtx*>(
      &::com::moon::demo::proto::_ErrCtx_default_instance_);
}
inline ::com::moon::demo::proto::ErrCtx* Demo3Rsp::release_err_ctx() {
  // @@protoc_insertion_point(field_release:com.moon.demo.proto.cs.Demo3Rsp.err_ctx)
  
  ::com::moon::demo::proto::ErrCtx* temp = err_ctx_;
  err_ctx_ = NULL;
  return temp;
}
inline ::com::moon::demo::proto::ErrCtx* Demo3Rsp::mutable_err_ctx() {
  
  if (err_ctx_ == NULL) {
    auto* p = CreateMaybeMessage<::com::moon::demo::proto::ErrCtx>(GetArenaNoVirtual());
    err_ctx_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.moon.demo.proto.cs.Demo3Rsp.err_ctx)
  return err_ctx_;
}
inline void Demo3Rsp::set_allocated_err_ctx(::com::moon::demo::proto::ErrCtx* err_ctx) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(err_ctx_);
  }
  if (err_ctx) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      err_ctx = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, err_ctx, submessage_arena);
    }
    
  } else {
    
  }
  err_ctx_ = err_ctx;
  // @@protoc_insertion_point(field_set_allocated:com.moon.demo.proto.cs.Demo3Rsp.err_ctx)
}

// -------------------------------------------------------------------

// Demo4Req

// int32 a = 1;
inline void Demo4Req::clear_a() {
  a_ = 0;
}
inline ::google::protobuf::int32 Demo4Req::a() const {
  // @@protoc_insertion_point(field_get:com.moon.demo.proto.cs.Demo4Req.a)
  return a_;
}
inline void Demo4Req::set_a(::google::protobuf::int32 value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:com.moon.demo.proto.cs.Demo4Req.a)
}

// int64 b = 2;
inline void Demo4Req::clear_b() {
  b_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Demo4Req::b() const {
  // @@protoc_insertion_point(field_get:com.moon.demo.proto.cs.Demo4Req.b)
  return b_;
}
inline void Demo4Req::set_b(::google::protobuf::int64 value) {
  
  b_ = value;
  // @@protoc_insertion_point(field_set:com.moon.demo.proto.cs.Demo4Req.b)
}

// string c = 3;
inline void Demo4Req::clear_c() {
  c_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Demo4Req::c() const {
  // @@protoc_insertion_point(field_get:com.moon.demo.proto.cs.Demo4Req.c)
  return c_.GetNoArena();
}
inline void Demo4Req::set_c(const ::std::string& value) {
  
  c_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.moon.demo.proto.cs.Demo4Req.c)
}
#if LANG_CXX11
inline void Demo4Req::set_c(::std::string&& value) {
  
  c_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.moon.demo.proto.cs.Demo4Req.c)
}
#endif
inline void Demo4Req::set_c(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  c_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.moon.demo.proto.cs.Demo4Req.c)
}
inline void Demo4Req::set_c(const char* value, size_t size) {
  
  c_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.moon.demo.proto.cs.Demo4Req.c)
}
inline ::std::string* Demo4Req::mutable_c() {
  
  // @@protoc_insertion_point(field_mutable:com.moon.demo.proto.cs.Demo4Req.c)
  return c_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Demo4Req::release_c() {
  // @@protoc_insertion_point(field_release:com.moon.demo.proto.cs.Demo4Req.c)
  
  return c_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Demo4Req::set_allocated_c(::std::string* c) {
  if (c != NULL) {
    
  } else {
    
  }
  c_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), c);
  // @@protoc_insertion_point(field_set_allocated:com.moon.demo.proto.cs.Demo4Req.c)
}

// bytes d = 4;
inline void Demo4Req::clear_d() {
  d_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Demo4Req::d() const {
  // @@protoc_insertion_point(field_get:com.moon.demo.proto.cs.Demo4Req.d)
  return d_.GetNoArena();
}
inline void Demo4Req::set_d(const ::std::string& value) {
  
  d_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.moon.demo.proto.cs.Demo4Req.d)
}
#if LANG_CXX11
inline void Demo4Req::set_d(::std::string&& value) {
  
  d_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.moon.demo.proto.cs.Demo4Req.d)
}
#endif
inline void Demo4Req::set_d(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  d_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.moon.demo.proto.cs.Demo4Req.d)
}
inline void Demo4Req::set_d(const void* value, size_t size) {
  
  d_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.moon.demo.proto.cs.Demo4Req.d)
}
inline ::std::string* Demo4Req::mutable_d() {
  
  // @@protoc_insertion_point(field_mutable:com.moon.demo.proto.cs.Demo4Req.d)
  return d_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Demo4Req::release_d() {
  // @@protoc_insertion_point(field_release:com.moon.demo.proto.cs.Demo4Req.d)
  
  return d_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Demo4Req::set_allocated_d(::std::string* d) {
  if (d != NULL) {
    
  } else {
    
  }
  d_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), d);
  // @@protoc_insertion_point(field_set_allocated:com.moon.demo.proto.cs.Demo4Req.d)
}

// .com.moon.demo.proto.cs.Demo4Flag flag = 5;
inline void Demo4Req::clear_flag() {
  flag_ = 0;
}
inline ::com::moon::demo::proto::cs::Demo4Flag Demo4Req::flag() const {
  // @@protoc_insertion_point(field_get:com.moon.demo.proto.cs.Demo4Req.flag)
  return static_cast< ::com::moon::demo::proto::cs::Demo4Flag >(flag_);
}
inline void Demo4Req::set_flag(::com::moon::demo::proto::cs::Demo4Flag value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:com.moon.demo.proto.cs.Demo4Req.flag)
}

// -------------------------------------------------------------------

// Demo4Rsp

// .com.moon.demo.proto.ErrCtx err_ctx = 1;
inline bool Demo4Rsp::has_err_ctx() const {
  return this != internal_default_instance() && err_ctx_ != NULL;
}
inline const ::com::moon::demo::proto::ErrCtx& Demo4Rsp::_internal_err_ctx() const {
  return *err_ctx_;
}
inline const ::com::moon::demo::proto::ErrCtx& Demo4Rsp::err_ctx() const {
  const ::com::moon::demo::proto::ErrCtx* p = err_ctx_;
  // @@protoc_insertion_point(field_get:com.moon.demo.proto.cs.Demo4Rsp.err_ctx)
  return p != NULL ? *p : *reinterpret_cast<const ::com::moon::demo::proto::ErrCtx*>(
      &::com::moon::demo::proto::_ErrCtx_default_instance_);
}
inline ::com::moon::demo::proto::ErrCtx* Demo4Rsp::release_err_ctx() {
  // @@protoc_insertion_point(field_release:com.moon.demo.proto.cs.Demo4Rsp.err_ctx)
  
  ::com::moon::demo::proto::ErrCtx* temp = err_ctx_;
  err_ctx_ = NULL;
  return temp;
}
inline ::com::moon::demo::proto::ErrCtx* Demo4Rsp::mutable_err_ctx() {
  
  if (err_ctx_ == NULL) {
    auto* p = CreateMaybeMessage<::com::moon::demo::proto::ErrCtx>(GetArenaNoVirtual());
    err_ctx_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.moon.demo.proto.cs.Demo4Rsp.err_ctx)
  return err_ctx_;
}
inline void Demo4Rsp::set_allocated_err_ctx(::com::moon::demo::proto::ErrCtx* err_ctx) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(err_ctx_);
  }
  if (err_ctx) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      err_ctx = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, err_ctx, submessage_arena);
    }
    
  } else {
    
  }
  err_ctx_ = err_ctx;
  // @@protoc_insertion_point(field_set_allocated:com.moon.demo.proto.cs.Demo4Rsp.err_ctx)
}

// -------------------------------------------------------------------

// Demo5Req

// int32 a = 1;
inline void Demo5Req::clear_a() {
  a_ = 0;
}
inline ::google::protobuf::int32 Demo5Req::a() const {
  // @@protoc_insertion_point(field_get:com.moon.demo.proto.cs.Demo5Req.a)
  return a_;
}
inline void Demo5Req::set_a(::google::protobuf::int32 value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:com.moon.demo.proto.cs.Demo5Req.a)
}

// int64 b = 2;
inline void Demo5Req::clear_b() {
  b_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Demo5Req::b() const {
  // @@protoc_insertion_point(field_get:com.moon.demo.proto.cs.Demo5Req.b)
  return b_;
}
inline void Demo5Req::set_b(::google::protobuf::int64 value) {
  
  b_ = value;
  // @@protoc_insertion_point(field_set:com.moon.demo.proto.cs.Demo5Req.b)
}

// string c = 3;
inline void Demo5Req::clear_c() {
  c_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Demo5Req::c() const {
  // @@protoc_insertion_point(field_get:com.moon.demo.proto.cs.Demo5Req.c)
  return c_.GetNoArena();
}
inline void Demo5Req::set_c(const ::std::string& value) {
  
  c_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.moon.demo.proto.cs.Demo5Req.c)
}
#if LANG_CXX11
inline void Demo5Req::set_c(::std::string&& value) {
  
  c_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.moon.demo.proto.cs.Demo5Req.c)
}
#endif
inline void Demo5Req::set_c(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  c_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.moon.demo.proto.cs.Demo5Req.c)
}
inline void Demo5Req::set_c(const char* value, size_t size) {
  
  c_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.moon.demo.proto.cs.Demo5Req.c)
}
inline ::std::string* Demo5Req::mutable_c() {
  
  // @@protoc_insertion_point(field_mutable:com.moon.demo.proto.cs.Demo5Req.c)
  return c_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Demo5Req::release_c() {
  // @@protoc_insertion_point(field_release:com.moon.demo.proto.cs.Demo5Req.c)
  
  return c_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Demo5Req::set_allocated_c(::std::string* c) {
  if (c != NULL) {
    
  } else {
    
  }
  c_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), c);
  // @@protoc_insertion_point(field_set_allocated:com.moon.demo.proto.cs.Demo5Req.c)
}

// bytes d = 4;
inline void Demo5Req::clear_d() {
  d_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Demo5Req::d() const {
  // @@protoc_insertion_point(field_get:com.moon.demo.proto.cs.Demo5Req.d)
  return d_.GetNoArena();
}
inline void Demo5Req::set_d(const ::std::string& value) {
  
  d_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.moon.demo.proto.cs.Demo5Req.d)
}
#if LANG_CXX11
inline void Demo5Req::set_d(::std::string&& value) {
  
  d_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.moon.demo.proto.cs.Demo5Req.d)
}
#endif
inline void Demo5Req::set_d(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  d_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.moon.demo.proto.cs.Demo5Req.d)
}
inline void Demo5Req::set_d(const void* value, size_t size) {
  
  d_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.moon.demo.proto.cs.Demo5Req.d)
}
inline ::std::string* Demo5Req::mutable_d() {
  
  // @@protoc_insertion_point(field_mutable:com.moon.demo.proto.cs.Demo5Req.d)
  return d_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Demo5Req::release_d() {
  // @@protoc_insertion_point(field_release:com.moon.demo.proto.cs.Demo5Req.d)
  
  return d_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Demo5Req::set_allocated_d(::std::string* d) {
  if (d != NULL) {
    
  } else {
    
  }
  d_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), d);
  // @@protoc_insertion_point(field_set_allocated:com.moon.demo.proto.cs.Demo5Req.d)
}

// -------------------------------------------------------------------

// Demo5Rsp

// .com.moon.demo.proto.ErrCtx err_ctx = 1;
inline bool Demo5Rsp::has_err_ctx() const {
  return this != internal_default_instance() && err_ctx_ != NULL;
}
inline const ::com::moon::demo::proto::ErrCtx& Demo5Rsp::_internal_err_ctx() const {
  return *err_ctx_;
}
inline const ::com::moon::demo::proto::ErrCtx& Demo5Rsp::err_ctx() const {
  const ::com::moon::demo::proto::ErrCtx* p = err_ctx_;
  // @@protoc_insertion_point(field_get:com.moon.demo.proto.cs.Demo5Rsp.err_ctx)
  return p != NULL ? *p : *reinterpret_cast<const ::com::moon::demo::proto::ErrCtx*>(
      &::com::moon::demo::proto::_ErrCtx_default_instance_);
}
inline ::com::moon::demo::proto::ErrCtx* Demo5Rsp::release_err_ctx() {
  // @@protoc_insertion_point(field_release:com.moon.demo.proto.cs.Demo5Rsp.err_ctx)
  
  ::com::moon::demo::proto::ErrCtx* temp = err_ctx_;
  err_ctx_ = NULL;
  return temp;
}
inline ::com::moon::demo::proto::ErrCtx* Demo5Rsp::mutable_err_ctx() {
  
  if (err_ctx_ == NULL) {
    auto* p = CreateMaybeMessage<::com::moon::demo::proto::ErrCtx>(GetArenaNoVirtual());
    err_ctx_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.moon.demo.proto.cs.Demo5Rsp.err_ctx)
  return err_ctx_;
}
inline void Demo5Rsp::set_allocated_err_ctx(::com::moon::demo::proto::ErrCtx* err_ctx) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(err_ctx_);
  }
  if (err_ctx) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      err_ctx = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, err_ctx, submessage_arena);
    }
    
  } else {
    
  }
  err_ctx_ = err_ctx;
  // @@protoc_insertion_point(field_set_allocated:com.moon.demo.proto.cs.Demo5Rsp.err_ctx)
}

// -------------------------------------------------------------------

// Demo6Req

// int32 a = 1;
inline void Demo6Req::clear_a() {
  a_ = 0;
}
inline ::google::protobuf::int32 Demo6Req::a() const {
  // @@protoc_insertion_point(field_get:com.moon.demo.proto.cs.Demo6Req.a)
  return a_;
}
inline void Demo6Req::set_a(::google::protobuf::int32 value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:com.moon.demo.proto.cs.Demo6Req.a)
}

// bool http = 2;
inline void Demo6Req::clear_http() {
  http_ = false;
}
inline bool Demo6Req::http() const {
  // @@protoc_insertion_point(field_get:com.moon.demo.proto.cs.Demo6Req.http)
  return http_;
}
inline void Demo6Req::set_http(bool value) {
  
  http_ = value;
  // @@protoc_insertion_point(field_set:com.moon.demo.proto.cs.Demo6Req.http)
}

// -------------------------------------------------------------------

// Demo6Rsp

// .com.moon.demo.proto.ErrCtx err_ctx = 1;
inline bool Demo6Rsp::has_err_ctx() const {
  return this != internal_default_instance() && err_ctx_ != NULL;
}
inline const ::com::moon::demo::proto::ErrCtx& Demo6Rsp::_internal_err_ctx() const {
  return *err_ctx_;
}
inline const ::com::moon::demo::proto::ErrCtx& Demo6Rsp::err_ctx() const {
  const ::com::moon::demo::proto::ErrCtx* p = err_ctx_;
  // @@protoc_insertion_point(field_get:com.moon.demo.proto.cs.Demo6Rsp.err_ctx)
  return p != NULL ? *p : *reinterpret_cast<const ::com::moon::demo::proto::ErrCtx*>(
      &::com::moon::demo::proto::_ErrCtx_default_instance_);
}
inline ::com::moon::demo::proto::ErrCtx* Demo6Rsp::release_err_ctx() {
  // @@protoc_insertion_point(field_release:com.moon.demo.proto.cs.Demo6Rsp.err_ctx)
  
  ::com::moon::demo::proto::ErrCtx* temp = err_ctx_;
  err_ctx_ = NULL;
  return temp;
}
inline ::com::moon::demo::proto::ErrCtx* Demo6Rsp::mutable_err_ctx() {
  
  if (err_ctx_ == NULL) {
    auto* p = CreateMaybeMessage<::com::moon::demo::proto::ErrCtx>(GetArenaNoVirtual());
    err_ctx_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.moon.demo.proto.cs.Demo6Rsp.err_ctx)
  return err_ctx_;
}
inline void Demo6Rsp::set_allocated_err_ctx(::com::moon::demo::proto::ErrCtx* err_ctx) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(err_ctx_);
  }
  if (err_ctx) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      err_ctx = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, err_ctx, submessage_arena);
    }
    
  } else {
    
  }
  err_ctx_ = err_ctx;
  // @@protoc_insertion_point(field_set_allocated:com.moon.demo.proto.cs.Demo6Rsp.err_ctx)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace cs
}  // namespace proto
}  // namespace demo
}  // namespace moon
}  // namespace com

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::com::moon::demo::proto::cs::Demo4Flag> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::moon::demo::proto::cs::Demo4Flag>() {
  return ::com::moon::demo::proto::cs::Demo4Flag_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_cs_5fmsg_2eproto
